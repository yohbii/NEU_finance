<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.advisor.mapper.FundPerformanceMapper">

    <resultMap id="BaseResultMap" type="com.advisor.entity.FundPerformance">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="fund_id" property="fundId" jdbcType="BIGINT"/>
        <result column="performance_date" property="performanceDate" jdbcType="DATE"/>
        <result column="ytd_return" property="ytdReturn" jdbcType="DECIMAL"/>
        <result column="one_month_return" property="oneMonthReturn" jdbcType="DECIMAL"/>
        <result column="three_month_return" property="threeMonthReturn" jdbcType="DECIMAL"/>
        <result column="six_month_return" property="sixMonthReturn" jdbcType="DECIMAL"/>
        <result column="one_year_return" property="oneYearReturn" jdbcType="DECIMAL"/>
        <result column="three_year_return" property="threeYearReturn" jdbcType="DECIMAL"/>
        <result column="max_drawdown" property="maxDrawdown" jdbcType="DECIMAL"/>
        <result column="sharpe_ratio" property="sharpeRatio" jdbcType="DECIMAL"/>
        <result column="volatility" property="volatility" jdbcType="DECIMAL"/>
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
        <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        fp.id, fp.fund_id, fp.performance_date, fp.ytd_return, fp.one_month_return, fp.three_month_return,
        fp.six_month_return, fp.one_year_return, fp.three_year_return, fp.max_drawdown, fp.sharpe_ratio, 
        fp.volatility, fp.created_at, fp.updated_at
    </sql>

    <select id="findList" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM fund_performance fp
        LEFT JOIN fund_info fi ON fp.fund_id = fi.id
        WHERE 1 = 1
        <if test="fundCode != null and fundCode != ''">
            AND fi.fund_code = #{fundCode}
        </if>
        ORDER BY fp.performance_date DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="countList" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM fund_performance fp
        LEFT JOIN fund_info fi ON fp.fund_id = fi.id
        WHERE 1 = 1
        <if test="fundCode != null and fundCode != ''">
            AND fi.fund_code = #{fundCode}
        </if>
    </select>

    <select id="findById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT
        fp.id, fp.fund_id, fp.performance_date, fp.ytd_return, fp.one_month_return, fp.three_month_return,
        fp.six_month_return, fp.one_year_return, fp.three_year_return, fp.max_drawdown, fp.sharpe_ratio, 
        fp.volatility, fp.created_at, fp.updated_at
        FROM fund_performance fp
        WHERE fp.id = #{id}
    </select>

    <select id="findLatestByFundCode" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM fund_performance fp
        LEFT JOIN fund_info fi ON fp.fund_id = fi.id
        WHERE fi.fund_code = #{fundCode}
        ORDER BY fp.performance_date DESC
        LIMIT 1
    </select>

    <insert id="insert" parameterType="com.advisor.entity.FundPerformance" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO fund_performance (
            fund_id, performance_date, ytd_return, one_month_return, three_month_return,
            six_month_return, one_year_return, three_year_return, max_drawdown, sharpe_ratio, volatility
        ) VALUES (
            #{fundId}, #{performanceDate}, #{ytdReturn}, #{oneMonthReturn}, #{threeMonthReturn},
            #{sixMonthReturn}, #{oneYearReturn}, #{threeYearReturn}, #{maxDrawdown}, #{sharpeRatio}, #{volatility}
        )
    </insert>

    <update id="update" parameterType="com.advisor.entity.FundPerformance">
        UPDATE fund_performance
        SET
        <trim suffixOverrides=",">
            <if test="performanceDate != null">performance_date = #{performanceDate},</if>
            <if test="ytdReturn != null">ytd_return = #{ytdReturn},</if>
            <if test="oneMonthReturn != null">one_month_return = #{oneMonthReturn},</if>
            <if test="threeMonthReturn != null">three_month_return = #{threeMonthReturn},</if>
            <if test="sixMonthReturn != null">six_month_return = #{sixMonthReturn},</if>
            <if test="oneYearReturn != null">one_year_return = #{oneYearReturn},</if>
            <if test="threeYearReturn != null">three_year_return = #{threeYearReturn},</if>
            <if test="maxDrawdown != null">max_drawdown = #{maxDrawdown},</if>
            <if test="sharpeRatio != null">sharpe_ratio = #{sharpeRatio},</if>
            <if test="volatility != null">volatility = #{volatility},</if>
        </trim>
        WHERE id = #{id}
    </update>

    <delete id="deleteById" parameterType="java.lang.Long">
        DELETE FROM fund_performance WHERE id = #{id}
    </delete>

    <delete id="deleteByFundCode" parameterType="java.lang.String">
        DELETE FROM fund_performance 
        WHERE fund_id IN (SELECT id FROM fund_info WHERE fund_code = #{fundCode})
    </delete>

    <select id="getAvgReturnByMonth" resultType="java.lang.Double">
        SELECT AVG(one_year_return) 
        FROM fund_performance 
        WHERE YEAR(performance_date) = #{year} 
        AND MONTH(performance_date) = #{month}
    </select>

    <select id="getCurrentRiskMetrics" resultType="java.util.Map">
        SELECT 
            AVG(one_year_return) as annual_return,
            AVG(sharpe_ratio) as sharpe_ratio,
            AVG(max_drawdown) as max_drawdown,
            AVG(volatility) as volatility
        FROM fund_performance 
        WHERE performance_date >= DATE_SUB(NOW(), INTERVAL 1 MONTH)
    </select>
    
    <!-- Following is the new query added for ChatService -->
    <select id="findLatestByFundId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM fund_performance
        WHERE fund_id = #{fundId}
        ORDER BY performance_date DESC
        LIMIT 1
    </select>

</mapper> 